parameters:
# [Required] Job name
  name: ''
# [Required] Build agent name
  image: ''
# [Optional] File with list of packages to install
  vcpkgListFile: $(Build.SourcesDirectory)/CI/azure-devops/vcpkg_list.txt
# [Required] VCPKG triplet
  vcpkgTriplet: ''
# [Optional] Cmake additional arguments for generate mode
  cmakeGenArgs: ''
# [Optional] Install additional tools command line
  installToolsCmd: ''

jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.image }}
  variables:
    VCPKG_CACHE_DIR: $(Build.SourcesDirectory)/../vcpkg/installed

  steps:
  - script: |
      echo --- Install build tools ---
      ${{ parameters.installToolsCmd }}
    displayName: 'Install build tools'
    condition: ne('${{ parameters.installToolsCmd }}', '')

  - script: |
      echo --- Clone VCPKG ---
      cd ..
      git clone --progress -v "https://github.com/Microsoft/vcpkg.git"
      echo --- VCPKG: Bootstrap ---
      cd vcpkg
      ./bootstrap-vcpkg.sh
    displayName: 'Install VCPKG'

  - task: Cache@2
    inputs:
      key: |
        vcpkg | v4 | "${{ parameters.name }}" | ${{ parameters.vcpkgListFile }}
      restoreKeys: |
        vcpkg | v4 | "${{ parameters.name }}" | ${{ parameters.vcpkgListFile }}
      path: $(VCPKG_CACHE_DIR)
      cacheHitVar: VCPKG_CACHE_RESTORED
    displayName: Configure cache of packages

  - script: |
      echo --- VCPKG: Install dependencies  ---
      cd ../vcpkg
      ./vcpkg install @${{ parameters.vcpkgListFile }} --triplet ${{ parameters.vcpkgTriplet }}
    displayName: 'Install dependencies'
    condition: ne(variables.VCPKG_CACHE_RESTORED, 'true')

  - script: |
      mkdir build.debug
      mkdir build.release
    displayName: Make Build directories

  - task: CMake@1
    inputs:
      workingDirectory: 'build.debug'
      cmakeArgs: '${{ parameters.cmakeGenArgs }} -DBUILD_SAMPLES=ON -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=$(Build.SourcesDirectory)/../vcpkg/scripts/buildsystems/vcpkg.cmake ..'
    displayName: 'Cmake - generate debug'

  - task: CMake@1
    inputs:
      workingDirectory: 'build.release'
      cmakeArgs: '${{ parameters.cmakeGenArgs }} -DBUILD_SAMPLES=ON -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$(Build.SourcesDirectory)/../vcpkg/scripts/buildsystems/vcpkg.cmake ..'
    displayName: 'Cmake - generate release'

  - script: |
      cd build.debug
      cmake --build .
    displayName: 'Build [Debug]'

  - script: |
      cd build.debug
      ctest -C Debug --output-on-failure
    displayName: 'Run tests [Debug]'

  - script: |
      cd build.release
      cmake --build .
    displayName: 'Build [Release]'

  - script: |
      cd build.debug
      ctest -C Release --output-on-failure
    displayName: 'Run tests [Release]'
